{
	"Comment": "Distributed map that reads CSV file for order data and detects delayed orders",
	"StartAt": "Operate Rows",
	"States": {
		"Operate Rows": {
			"Type": "Map",
			"ItemProcessor": {
				"ProcessorConfig": {
					"Mode": "DISTRIBUTED",
					"ExecutionType": "EXPRESS"
				},
				"StartAt": "GetExistingIssues",
				"States": {
					"GetExistingIssues": {
						"Type": "Task",
						"Resource": "arn:aws:states:::lambda:invoke",
						"Parameters": {
							"FunctionName": "${GetExistingIssuesFunction}",
							"Payload.$": "$"
						},
						"OutputPath": "$.Payload",
						"Retry": [
							{
								"ErrorEquals": [
									"Lambda.ServiceException",
									"Lambda.AWSLambdaException",
									"Lambda.SdkClientException",
									"Lambda.TooManyRequestsException"
								],
								"IntervalSeconds": 1,
								"MaxAttempts": 3,
								"BackoffRate": 2
							}
						],
						"Next": "Map"
					},
					"Map": {
						"Type": "Map",
						"ItemProcessor": {
							"ProcessorConfig": {
								"Mode": "INLINE"
							},
							"StartAt": "Operations Execution",
							"States": {
								"Operations Execution": {
									"Type": "Task",
									"Resource": "arn:aws:states:::lambda:invoke",
									"OutputPath": "$.Payload",
									"Parameters": {
										"Payload.$": "$",
										"FunctionName": "${ExecuteOperationFunction}"
									},
									"Retry": [
										{
											"ErrorEquals": [
												"Lambda.ServiceException",
												"Lambda.AWSLambdaException",
												"Lambda.SdkClientException",
												"Lambda.TooManyRequestsException"
											],
											"IntervalSeconds": 1,
											"MaxAttempts": 3,
											"BackoffRate": 2,
											"JitterStrategy": "FULL"
										}
									],
									"Next": "SQS SendMessage"
								},
								"SQS SendMessage": {
									"Type": "Task",
									"Resource": "arn:aws:states:::sqs:sendMessage",
									"Parameters": {
										"QueueUrl": "${ScarletExecutionQueue}",
										"MessageBody.$": "$"
									},
									"End": true
								}
							}
						},
						"End": true,
						"ToleratedFailurePercentage": 50,
						"Retry": [
							{
								"ErrorEquals": [
									"Lambda.ServiceException",
									"Lambda.AWSLambdaException",
									"Lambda.SdkClientException",
									"Lambda.TooManyRequestsException"
								],
								"BackoffRate": 2,
								"IntervalSeconds": 5,
								"MaxAttempts": 3,
								"MaxDelaySeconds": 60
							}
						]
					}
				}
			},
			"ItemReader": {
				"Resource": "arn:aws:states:::s3:getObject",
				"Parameters": {
					"Bucket.$": "$.bucketName",
					"Key.$": "$.filePath"
				},
				"ReaderConfig": {
					"InputType": "CSV",
					"CSVHeaderLocation": "FIRST_ROW"
				}
			},
			"MaxConcurrency": 1000,
			"Label": "OperateRows",
			"End": true,
			"ItemBatcher": {
				"MaxItemsPerBatch": 10,
				"BatchInput": {
					"apiBaseUrl.$": "$.apiBaseUrl",
					"forgeToken.$": "$.forgeToken",
					"bucketName.$": "$.bucketName",
					"cloudId.$": "$.cloudId",
					"executionId.$": "$.executionId",
					"projectId.$": "$.projectId",
					"client.$": "$.client"
				}
			},
			"ResultPath": "$.stateInput.method"
		}
	}
}